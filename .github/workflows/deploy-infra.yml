name: Deploy Infrastructure

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_USE_OIDC: true

jobs:
  bootstrap:
    uses: ./.github/workflows/bootstrap-state.yml
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  terraform:
    needs: bootstrap
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform -chdir=infra init

      - name: Import Existing Resources if they exist
        run: |
          # Import User-Assigned Managed Identity
          terraform -chdir=infra import azurerm_user_assigned_identity.logic_apps_identity /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/ShadowPivot/providers/Microsoft.ManagedIdentity/userAssignedIdentities/shadow-pivot-logic-apps-identity || echo "UMI doesn't exist yet, will be created"
          
          # Import AI Foundry (Cognitive Account)
          terraform -chdir=infra import azurerm_cognitive_account.ai_foundry /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/ShadowPivot/providers/Microsoft.CognitiveServices/accounts/shadow-pivot-ai-foundry || echo "AI Foundry doesn't exist yet, will be created"
          
          # Import Storage Account
          terraform -chdir=infra import azurerm_storage_account.main /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/ShadowPivot/providers/Microsoft.Storage/storageAccounts/shdwagentstorage || echo "Storage account doesn't exist yet, will be created"
          
          # Import Logic App Workflows
          terraform -chdir=infra import azurerm_logic_app_workflow.entry /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/ShadowPivot/providers/Microsoft.Logic/workflows/entry-agent-step || echo "Entry Logic App doesn't exist yet, will be created"
          terraform -chdir=infra import azurerm_logic_app_workflow.design_gen /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/ShadowPivot/providers/Microsoft.Logic/workflows/design-gen-step || echo "Design Gen Logic App doesn't exist yet, will be created"
          terraform -chdir=infra import azurerm_logic_app_workflow.content_gen /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/ShadowPivot/providers/Microsoft.Logic/workflows/content-gen-step || echo "Content Gen Logic App doesn't exist yet, will be created"
          terraform -chdir=infra import azurerm_logic_app_workflow.review /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/ShadowPivot/providers/Microsoft.Logic/workflows/review-step || echo "Review Logic App doesn't exist yet, will be created"
          
          # Import Storage Queues
          terraform -chdir=infra import azurerm_storage_queue.design_gen_q https://shdwagentstorage.queue.core.windows.net/design-gen-q || echo "Design gen queue doesn't exist yet, will be created"
          terraform -chdir=infra import azurerm_storage_queue.content_gen_q https://shdwagentstorage.queue.core.windows.net/content-gen-q || echo "Content gen queue doesn't exist yet, will be created"
          terraform -chdir=infra import azurerm_storage_queue.review_q https://shdwagentstorage.queue.core.windows.net/review-q || echo "Review queue doesn't exist yet, will be created"
          terraform -chdir=infra import azurerm_storage_queue.completion_q https://shdwagentstorage.queue.core.windows.net/completion-q || echo "Completion queue doesn't exist yet, will be created"
          
          # Import Storage Container
          terraform -chdir=infra import azurerm_storage_container.ai_artifacts https://shdwagentstorage.blob.core.windows.net/ai-artifacts || echo "AI artifacts container doesn't exist yet, will be created"
          
          # Import API Connection
          terraform -chdir=infra import azurerm_api_connection.storage_queues /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/ShadowPivot/providers/Microsoft.Web/connections/azurequeues-connection || echo "API connection doesn't exist yet, will be created"
          
          # Import Role Assignment
          terraform -chdir=infra import azurerm_role_assignment.ai_foundry_user $(az role assignment list --scope /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/ShadowPivot/providers/Microsoft.CognitiveServices/accounts/shadow-pivot-ai-foundry --query "[?roleDefinitionName=='Cognitive Services User'].id" -o tsv 2>/dev/null | head -1) || echo "Role assignment doesn't exist yet, will be created"
          
          # Import GPT-4 Deployment
          terraform -chdir=infra import azurerm_cognitive_deployment.gpt4 /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/ShadowPivot/providers/Microsoft.CognitiveServices/accounts/shadow-pivot-ai-foundry/deployments/gpt-4-deployment || echo "GPT-4 deployment doesn't exist yet, will be created"
        continue-on-error: true

      - name: Terraform Validate
        run: terraform -chdir=infra validate

      - name: Terraform Plan
        run: terraform -chdir=infra plan

      - name: Terraform Apply
        run: terraform -chdir=infra apply -auto-approve
